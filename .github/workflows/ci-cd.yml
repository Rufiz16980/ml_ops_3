name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort ruff

      - name: Run format checks
        run: |
          black --check .
          isort --check-only --profile black .
          ruff check .

      - name: Build backend Docker image
        run: docker build -t backend ./backend

      - name: Build frontend Docker image
        run: docker build -t frontend ./frontend

  deploy:
    needs: lint-and-build
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ${{ github.workspace }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      BEDROCK_MODEL_ID: ${{ secrets.BEDROCK_MODEL_ID }}

    steps:
      - name: Fix permissions & clean workspace
        run: |
          echo "Cleaning old repo to avoid permission issues..."
          sudo rm -rf ${{ github.workspace }} || true
          mkdir -p ${{ github.workspace }}
          sudo chown -R ubuntu:ubuntu ${{ github.workspace }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> backend/.env
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> backend/.env
          echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}" >> backend/.env
          echo "BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID}" >> backend/.env

      - name: Stop old containers
        run: |
          echo "Stopping old containers..."
          docker compose -f docker-compose.yml down || true

      - name: Build and start containers
        run: |
          echo "Starting new containers..."
          docker compose -f docker-compose.yml up -d --build

      - name: Show container status
        run: docker compose -f docker-compose.yml ps

      - name: Backend logs
        run: docker compose -f docker-compose.yml logs backend --tail=100 || true

      - name: Frontend logs
        run: docker compose -f docker-compose.yml logs frontend --tail=100 || true
